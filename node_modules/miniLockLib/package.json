{
  "name": "miniLockLib",
  "description": "Do miniLock encryption operations on a web page of your own.",
  "version": "0.0.0",
  "author": {
    "name": "45678",
    "email": "undefined@undefined"
  },
  "license": "Public Domain",
  "main": "library.compiled",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/45678/miniLockLib.git"
  },
  "dependencies": {
    "blake2s-js": "1.0.3",
    "entropizer": "^0.1.3",
    "nacl-stream": "0.3.3",
    "tweetnacl": "0.12.x"
  },
  "devDependencies": {
    "browserify": "5.9.x",
    "coffee-script": "1.8.x",
    "tape": "2.14.x",
    "wr": "1.3.x"
  },
  "scripts": {
    "start": "make; wr 'make' library/*.coffee tests/*.coffee website/*.coffee website/*.jst",
    "test": "make; open http://minilocklib.dev/tests.html"
  },
  "readme": "[<img src=\"https://raw.githubusercontent.com/45678/miniLockLib/master/website/poster.png\">](https://45678.github.io/miniLockLib/)\n\nGet [`miniLockLib.js`](https://raw.githubusercontent.com/45678/miniLockLib/master/miniLockLib.js) and add it to your web page with a script tag:\n\n    <script src=\"miniLockLib.js\" charset=\"utf-8\"></script>\n\nOr `npm install 45678/miniLockLib.git` and require it in your computer program with:\n\n    miniLockLib = require('miniLockLib')\n\nNow you are ready to call `miniLockLib` methods...\n\n__Examples__\n\nCall `miniLockLib.makeKeyPair` with a `secretPhrase` and `emailAddress` to get a pair of `keys`:\n\n    miniLockLib.makeKeyPair(secretPhrase, emailAddress, function(error, keys){\n      if (keys) {\n        keys.publicKey is instanceof Uint8Array\n        keys.secretKey is instanceof Uint8Array\n      } else {\n        console.error(error)\n       }\n    })\n\nPass `data`, `name`, `keys` and `miniLockIDs` when you `encrypt` a file:\n\n    miniLockLib.encrypt({\n      data: instanceof Blob or File,\n      name: 'Untitled.txt'\n      keys: {publicKey: Uint8Array, secretKey: Uint8Array},\n      miniLockIDs: [myID, aliceID, bobbyID, ...]\n      callback: function(error, encrypted) {\n        if (encrypted) {\n          encrypted.data is an instanceof Blob\n          encrypted.data.size is the Number of bytes in the Blob\n          encrypted.data.type is 'application/minilock'\n          encrypted.name is 'Untitled.txt.minilock'\n          encrypted.senderID identifies the owner of the keys\n        } else {\n          console.error(error)\n        }\n      }\n    })\n\nPass `data` and `keys` when you `decrypt` a file:\n\n    miniLockLib.decrypt({\n      data: encrypted.data\n      keys: {publicKey: Uint8Array, secretKey: Uint8Array},\n      callback: function(error, decrypted) {\n        if (decrypted) {\n          decrypted.data is an instanceof Blob\n          encrypted.data.size is the Number of bytes in the Blob\n          encrypted.data.type is 'text/plain'\n          decrypted.name is 'Untitled.txt'\n          decrypted.senderID identifies the owner of the keys\n        } else {\n          console.error(error)\n        }\n      }\n    })\n\n__Digging In__\n\n`git clone https://github.com/45678/miniLockLib.git` to get the source code.\n\n`make` to compile [CoffeeScript](http://www.coffeescript.org/) files into [ECMAScript](http://www.ecmascript.org/) files in the `library.compiled`, `tests.compiled` and `website` folders.\n\n`make clean` to start over.\n\n`npm run tests` to open the test suite in a web agent `window`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/45678/miniLockLib/issues"
  },
  "homepage": "https://github.com/45678/miniLockLib",
  "_id": "miniLockLib@0.0.0",
  "_shasum": "16a78c5f3b753406ba552f4309b7342b6a82a771",
  "_resolved": "git+https://git@github.com/45678/miniLockLib.git#4a0a72ed18d9e61c1b8bd44bfce29f6c64809d18",
  "_from": "git+https://git@github.com/45678/miniLockLib.git"
}
